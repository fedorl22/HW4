# задача RLE. Реализуйте RLE алгоритм: реализуйте модуль сжатия и восстановления данных.
# например декодирование
# https://stepik.org/lesson/21300/step/2


# Кодирование длин серий — это базовый алгоритм сжатия данных.

# В этой задаче мы реализуем алгоритм дешифровки строк, закодированных с помощью одного из самых простых  вариантов кодирования длин серий.

# На вход алгоритму подаётся строка, содержащая цифры и символы латинского алфавита. Эта строка разбивается на так называемые "серии", которые кодируются парой число-символ или просто символ (в таком случае число считается равным единице). Результат должен содержать эти серии в том же порядке, что они и встречаются в исходной строке, при этом каждая серия раскрывается в последовательность символов соответствующей длины. 

# Например, рассмотрим строку 

# 3ab4c2CaB

# Разобъём её на серии

# 3a b 4c 2C a B

# После чего преобразуем серии и получим исходную закодированную строку:

# aaabccccCCaB

# Формат ввода:
# Одна строка, содержащая закодированную последовательность.
# Формат вывода:
# Строка, содержащая раскодированную последовательность.
# Sample Input:
# 3ab4c2CaB
# Sample Output:
# aaabccccCCaB
lst = list(input('Введите закодированную последовательность: '))
print(*lst)
decode = []
for i in range(len(lst)): 
    # print(lst[i])
    if lst[i] not in '0123456789':
        decode.append(lst[i])
    if lst[i] in '0123456789':
        temp = int(lst[i])
        # print(type(temp))
        j = 1
        while j<temp:
            decode.append(lst[i+1])
            j+=1
print(*decode)





